{"version":3,"sources":["tools/history.js","screen/Container.js","components/SubComponent.js","screen/Extend/Extend_art3.js","../node_modules/react-router-dom/es/Link.js"],"names":["hashHistory","createHashHistory","require","Container","Component","react_default","a","createElement","nav_bar_default","mode","icon","window","location","hash","icon_default","type","onLeftClick","history","go","this","props","children","BlockComponent","_React$Component","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","React","_createClass","key","value","_this$props","route","title","containerStyle","titleStyle","react__WEBPACK_IMPORTED_MODULE_0___default","className","style","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","to","Title","_React$Component2","fontSize","textAlign","lineHeight","marginTop","Label","_React$Component3","Paragraph","_React$Component4","_objectSpread","textIndent","margin","CodeBlock","_React$Component5","content","Extend_art3","_screen_Container__WEBPACK_IMPORTED_MODULE_1__","padding","_components_SubComponent__WEBPACK_IMPORTED_MODULE_2__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","fontWeight","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","invariant__WEBPACK_IMPORTED_MODULE_2__","invariant__WEBPACK_IMPORTED_MODULE_2___default","history__WEBPACK_IMPORTED_MODULE_3__","_extends","Object","assign","target","i","length","source","prototype","hasOwnProperty","call","self","ReferenceError","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","Link","_temp","_this","instance","Constructor","TypeError","_len","args","Array","_key","concat","handleClick","onClick","defaultPrevented","button","preventDefault","context","router","replace","push","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","render","_props","innerRef","obj","keys","indexOf","_objectWithoutProperties","undefined","href","createHref","ref","propTypes","func","string","bool","oneOfType","object","isRequired","defaultProps","contextTypes","shape","__webpack_exports__"],"mappings":"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","file":"static/js/32.fcd6e8c9.chunk.js","sourcesContent":["let createHashHistory = require(\"history\").createHashHistory;\nlet hashHistory = createHashHistory();\nexport default hashHistory;","import React, { Component } from 'react';\nimport { NavBar, Icon } from 'antd-mobile';\nimport history from '@/tools/history';\n\nclass Container extends Component {\n\n    render() {\n        return (\n            <div>\n                <NavBar\n                mode=\"light\"\n                icon={window.location.hash === '#/Home' ? '' : <Icon type=\"left\" />}\n                onLeftClick={window.location.hash === '#/Home' ? () => {} : () => {history.go(-1)}}\n                >前端笔记</NavBar>\n            {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default Container;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport '@/assets/style/components.less';\n\nexport class BlockComponent extends React.Component {\n    render() {\n        let { route, title, containerStyle, titleStyle } = this.props;\n        return (\n            <div className={'blockComponent'} style={containerStyle}>\n                <Link to={route}>\n                    <p style={titleStyle}>{title}</p>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport class Title extends React.Component {\n    render() {\n        return (\n            <h3 style={{fontSize: '24px', textAlign: 'center', lineHeight: '36px', marginTop: '10px'}}>{this.props.title}</h3>\n        )\n    }\n}\n\nexport class Label extends React.Component {\n    render() {\n        return(\n            <div className={'label'}>\n                <p>{this.props.title} <i className={'Lborder'}></i></p>\n            </div>\n        )\n    }\n}\n\nexport class Paragraph extends React.Component {\n    render() {\n        return(\n            <section className='paragraph' style={{textIndent: '2em', margin: '10px 0', lineHeight: '26px', ...this.props.style}}>{this.props.title}</section>\n        )\n    }\n}\n\nexport class CodeBlock extends React.Component {\n    render() {\n        return(\n            <div className={'highlight'}>\n                <pre>\n                    {this.props.content}\n                </pre>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport Container from '@/screen/Container';\nimport { Title, Label, Paragraph, CodeBlock } from '@/components/SubComponent';\nimport { Link } from 'react-router-dom';\n\nclass Extend_art3 extends React.Component {\n    render() {\n        return(\n            <Container>\n                <div style={{padding: '0 10px'}}>\n                    <Title title={'javascript面向对象系列第二篇——创建对象的5种模式'} />\n                    <Paragraph title={'如何创建对象，或者说如何更优雅的创建对象，一直是一个津津乐道的话题。本文将从最简单的创建对象的方式入手，逐步介绍5种创建对象的模式'} />\n                    <Label title={'对象字面量'} />\n                    <Paragraph title={'一般地，我们创建一个对象会使用对象字面量的形式'} />\n                    <Paragraph title={<p>注意：有三种方式来创建对象，包括new构造函数、对象直接量和Object.create()函数，详细情况<Link to={'Extend_art2'}>移步至此</Link></p>} />\n<CodeBlock content={\n`var person1 = {\n    name: \"bai\",\n    age : 29,\n    job: \"Software Engineer\",\n    sayName: function(){\n        alert(this.name);\n    }\n};\n`} />\n                    <Paragraph title={'如果我们要创建大量的对象，则如下所示：'} />\n<CodeBlock content={\n`var person1 = {\n    name: \"bai\",\n    age : 29,\n    job: \"Software Engineer\",\n    sayName: function(){\n        alert(this.name);\n    }\n};\nvar person2 = {\n    name: \"hu\",\n    age : 25,\n    job: \"Software Engineer\",\n    sayName: function(){\n        alert(this.name);\n    }\n};\n/*\nvar person3 ...\n*/\n`} />\n                    <Paragraph title={'虽然对象字面量可以用来创建单个对象，但如果要创建多个对象，会产生大量的重复代码'} />\n                    <Label title={'工厂模式'} />\n                    <Paragraph title={'为了解决上述问题，人们开始使用工厂模式。该模式抽象了创建具体对象的过程，用函数来封装以特定接口创建对象的细节'} />\n<CodeBlock content={\n`function createPerson(name,age,job){\n    var o = new Object();\n    o.name = name;\n    o.age = age;\n    o.job = job;\n    o.sayname = function(){\n        alert(this.name);\n    }\n    return o;\n}\nvar person1 = createPerson('bai',29,'software Engineer');\nvar person2 = createPerson('hu',25,'software Engineer');\n`} />\n                    <Paragraph title={'工厂模式虽然解决了创建多个相似对象的问题，但没有解决对象识别的问题，因为使用该模式并没有给出对象的类型'} />\n                    <Label title={'构造函数模式'} />\n                    <Paragraph title={'可以通过创建自定义的构造函数，来定义自定义对象类型的属性和方法。创建自定义的构造函数意味着可以将它的实例标识为一种特定的类型，而这正是构造函数模式胜过工厂模式的地方。该模式没有显式地创建对象，直接将属性和方法赋给了this对象，且没有return语句'} />\n<CodeBlock content={\n`function Person(name,age,job){\n    this.name = name;\n    this.age = age;\n    this.jog = job;\n    this.sayName = function(){\n        alert(this.name);\n    };\n}\nvar person1 = new Person(\"bai\",29,\"software Engineer\");\nvar person2 = new Person(\"hu\",25,\"software Engineer\");\n`} />\n                    <Paragraph title={'使用构造函数的主要问题是每个方法都要在每个实例上重新创建一遍，创建多个完成相同任务的方法完全没有必要，浪费内存空间'} />\n<CodeBlock content={\n`function Person(name,age,job){\n    this.name = name;\n    this.age = age;\n    this.jog = job;\n    this.sayName = function(){\n        alert(this.name);\n    };\n}\nvar person1 = new Person(\"bai\",29,\"software Engineer\");\nvar person2 = new Person(\"hu\",25,\"software Engineer\");\n//具有相同作用的sayName()方法在person1和person2这两个实例中却占用了不同的内存空间\nconsole.log(person1.sayName === person2.sayName);//false\n`} />\n                    <Paragraph style={{textIndent: 0, fontWeight: 700}} title={'构造函数拓展模式'} />\n                    <Paragraph title={'在构造函数模式的基础上，把方法定义转移到构造函数外部，可以解决方法被重复创建的问题'} />\n<CodeBlock content={\n`function Person(name,age,job){\n    this.name = name;\n    this.age = age;\n    this.jog = job;\n    this.sayName = sayName;\n}\nfunction sayName(){\n    alert(this.name);\n};\nvar person1 = new Person(\"bai\",29,\"software Engineer\");\nvar person2 = new Person(\"hu\",25,\"software Engineer\");\nconsole.log(person1.sayName === person2.sayName);//true\n`} />\n                    <Paragraph title={'现在，新问题又来了。在全局作用域中定义的函数实际上只能被某个对象调用，这让全局作用域有点名不副实。而且，如果对象需要定义很多方法，就要定义很多全局函数，严重污染全局空间，这个自定义的引用类型没有封装性可言了'} />\n                    <Paragraph style={{textIndent: 0, fontWeight: 700}} title={'寄生构造函数模式'} />\n                    <Paragraph title={'该模式的基本思想是创建一个函数，该函数的作用仅仅是封装创建对象的代码，然后再返回新创建的对象。该模式是工厂模式和构造函数模式的结合'} />\n                    <Paragraph title={'寄生构造函数模式与构造函数模式有相同的问题，每个方法都要在每个实例上重新创建一遍，创建多个完成相同任务的方法完全没有必要，浪费内存空间'} />\n<CodeBlock content={\n`function Person(name,age,job){\n    var o = new Object();\n    o.name = name;\n    o.age = age;\n    o.job = job;\n    o.sayName = function(){\n        console.log(this.name);\n    };\n    return o;\n}\nvar person1 = new Person(\"bai\",29,\"software Engineer\");\nvar person2 = new Person(\"hu\",25,\"software Engineer\");\n//具有相同作用的sayName()方法在person1和person2这两个实例中却占用了不同的内存空间\nconsole.log(person1.sayName === person2.sayName);//false\n`} />\n                    <Paragraph title={'还有一个问题是，使用该模式返回的对象与构造函数之间没有关系。因此，使用instanceof运算符和prototype属性都没有意义。所以，该模式要尽量避免使用'} />\n<CodeBlock content={\n`function Person(name,age,job){\n    var o = new Object();\n    o.name = name;\n    o.age = age;\n    o.job = job;\n    o.sayName = function(){\n        console.log(this.name);\n    };\n    return o;\n}\nvar person1 = new Person(\"bai\",29,\"software Engineer\");\nconsole.log(person1 instanceof Person);//false\nconsole.log(person1.__proto__ === Person.prototype);//false\n`} />\n                    <Paragraph style={{textIndent: 0, fontWeight: 700}} title={'稳妥构造函数模式'} />\n                    <Paragraph title={'所谓稳妥对象指没有公共属性，而且其方法也不引用this的对象。稳妥对象最适合在一些安全环境中(这些环境会禁止使用this和new)或者在防止数据被其他应用程序改动时使用'} />\n                    <Paragraph title={'稳妥构造函数与寄生构造函数模式相似，但有两点不同：一是新创建对象的实例方法不引用this；二是不使用new操作符调用构造函数'} />\n<CodeBlock content={\n`function Person(name,age,job){\n    //创建要返回的对象\n    var o = new Object();\n    //可以在这里定义私有变量和函数\n    //添加方法\n    o.sayName = function(){\n        console.log(name);\n    };\n    //返回对象\n    return o;\n}\n//在稳妥模式创建的对象中，除了使用sayName()方法之外，没有其他方法访问name的值\nvar friend = Person(\"bai\",29,\"Software Engineer\");\nfriend.sayName();//\"bai\"\n`} />\n                    <Paragraph title={'与寄生构造函数模式相似，使用稳妥构造函数模式创建的对象与构造函数之间也没有什么关系，因此instanceof操作符对这种对象也没有什么意义'} />\n                    <Label title={'原型模式'} />\n                    <Paragraph title={'使用原型对象，可以让所有实例共享它的属性和方法。换句话说，不必在构造函数中定义对象实例的信息，而是可以将这些信息直接添加到原型对象中'} />\n<CodeBlock content={\n`function Person(){\n    Person.prototype.name = \"bai\";\n    Person.prototype.age = 29;\n    Person.prototype.job = \"software Engineer\";\n    Person.prototype.sayName = function(){\n        console.log(this.name);\n    }\n}\nvar person1 = new Person();\nperson1.sayName();//\"bai\"\nvar person2 = new Person();\nperson2.sayName();//\"bai\"\nalert(person1.sayName == person2.sayName);//true\n`} />\n                    <Paragraph style={{textIndent: 0, fontWeight: 700}} title={'更简单的原型模式'} />\n                    <Paragraph title={'为了减少不必要的输入，也为了从视觉上更好地封装原型的功能，用一个包含所有属性和方法的对象字面量来重写整个原型对象'} />\n                    <Paragraph title={'但是，经过对象字面量的改写后，constructor不再指向Person了。因为此方法完全重写了默认的prototype对象，使得Person.prototype的自有属性constructor属性不存在，只有从原型链中找到Object.prototype中的constructor属性'} />\n<CodeBlock content={\n`function Person(){};\nPerson.prototype = {\n    name: \"bai\",\n    age: 29,\n    job: \"software Engineer\",\n    sayName : function(){\n        console.log(this.name);\n    }\n};\nvar person1 = new Person();\nperson1.sayName();//\"bai\"\nconsole.log(person1.constructor === Person);//false\nconsole.log(person1.constructor === Object);//true\n`} />\n                    <Paragraph title={'可以显式地设置原型对象的constructor属性'} />\n<CodeBlock content={\n`function Person(){};\nPerson.prototype = {\n    constructor:Person,\n    name: \"bai\",\n    age: 29,\n    job: \"software Engineer\",\n    sayName : function(){\n        console.log(this.name);\n    }\n};\nvar person1 = new Person();\nperson1.sayName();//\"bai\"\nconsole.log(person1.constructor === Person);//true\nconsole.log(person1.constructor === Object);//false\n`} />\n                    <Paragraph title={'由于默认情况下，原生的constructor属性是不可枚举的，更妥善的解决方法是使用Object.defineProperty()方法，改变其属性描述符中的枚举性enumerable'} />\n<CodeBlock content={\n`function Person(){};\nPerson.prototype = {\n    name: \"bai\",\n    age: 29,\n    job: \"software Engineer\",\n    sayName : function(){\n        console.log(this.name);\n    }\n};\nObject.defineProperty(Person.prototype,'constructor',{\n    enumerable: false,\n    value: Person\n});\nvar person1 = new Person();\nperson1.sayName();//\"bai\"\nconsole.log(person1.constructor === Person);//true\nconsole.log(person1.constructor === Object);//false\n`} />\n                    <Paragraph title={'原型模式问题在于引用类型值属性会被所有的实例对象共享并修改，这也是很少有人单独使用原型模式的原因'} />\n<CodeBlock content={\n`function Person(){}\nPerson.prototype = {\n    constructor: Person,\n    name: \"bai\",\n    age: 29,\n    job: \"Software Engineer\",\n    friend : [\"shelby\",\"Court\"],\n    sayName: function(){\n        console.log(this.name);\n    }\n};\nvar person1 = new Person();\nvar person2 = new Person();\nperson1.friends.push(\"Van\");\nalert(person1.friends);//[\"shelby\",\"Court\",\"Van\"];\nalert(person2.friends);//[\"shelby\",\"Court\",\"Van\"];\nalert(person1.friends === person2.friends);//true\n`} />\n                    <Label title={'组合模式'} />\n                    <Paragraph title={'组合使用构造函数模式和原型模式是创建自定义类型的最常见方式。构造函数模式用于定义实例属性，而原型模式用于定义方法和共享的属性，这种组合模式还支持向构造函数传递参数。实例对象都有自己的一份实例属性的副本，同时又共享对方法的引用，最大限度地节省了内存。该模式是目前使用最广泛、认同度最高的一种创建自定义对象的模式'} />\n<CodeBlock content={\n`function Person(name,age,job){\n    this.name = name;\n    this.age = age;\n    this.job = job;\n    this.friends = [\"shelby\",\"Court\"];\n}\nPerson.prototype = {\n    constructor: Person,\n    sayName : function(){\n        console.log(this.name);\n    }    \n}\nvar person1 = new Person(\"bai\",29,\"Software Engineer\");\nvar person2 = new Person(\"hu\",25,\"Software Engineer\");\nperson1.friends.push(\"Van\");\nalert(person1.friends);// [\"shelby\",\"Court\",\"Van\"];\nalert(person2.friends);// [\"shelby\",\"Court\"];\nalert(person1.friends === person2.friends);//false\nalert(person1.sayName === person2.sayName);//true\n`} />\n                    <Paragraph style={{textIndent: 0, fontWeight: 700}} title={'动态原型模式'} />\n                    <Paragraph title={'动态原型模式将组合模式中分开使用的构造函数和原型对象都封装到了构造函数中，然后通过检查方法是否被创建，来决定是否初始化原型对象'} />\n                    <Paragraph title={'使用这种方法将分开的构造函数和原型对象合并到了一起，使得代码更加整齐，也减少了全局空间的污染'} />\n                    <Paragraph title={'注意：如果原型对象中包含多个语句，只需要检测其中一个语句即可'} />\n<CodeBlock content={\n`function Person(name,age,job){\n    //属性\n    this.name = name;\n    this.age = age;\n    this.job = job;\n    //方法\n    if(typeof this.sayName != \"function\"){\n        Person.prototype.sayName = function(){\n            console.log(this.name);\n        };\n    }\n}\nvar friend = new Person(\"bai\",29,\"Software Engineer\");\nfriend.sayName();//'bai'\n`} />\n                    <Label title={'最后'} />\n                    <Paragraph title={'本文从使用对象字面量形式创建一个对象开始说起，创建多个对象会造成代码冗余；使用工厂模式可以解决该问题，但存在对象识别的问题；接着介绍了构造函数模式，该模式解决了对象识别的问题，但存在关于方法的重复创建问题；接着介绍了原型模式，该模式的特点就在于共享，但引出了引用类型值属性会被所有的实例对象共享并修改的问题；最后，提出了构造函数和原型组合模式，构造函数模式用于定义实例属性，而原型模式用于定义方法和共享的属性，这种组合模式还支持向构造函数传递参数，该模式是目前使用最广泛的一种模式'} />\n                    <Paragraph title={'此外，一些模式下面还有一些解决特殊需求的拓展模式'} />\n                </div>\n            </Container>\n        )\n    }\n}\n\nexport default Extend_art3;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport { createLocation } from \"history\";\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nvar Link = function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      if (_this.props.onClick) _this.props.onClick(event);\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore everything but left clicks\n      !_this.props.target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n          var history = _this.context.router.history;\n          var _this$props = _this.props,\n              replace = _this$props.replace,\n              to = _this$props.to;\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Link.prototype.render = function render() {\n    var _props = this.props,\n        replace = _props.replace,\n        to = _props.to,\n        innerRef = _props.innerRef,\n        props = _objectWithoutProperties(_props, [\"replace\", \"to\", \"innerRef\"]); // eslint-disable-line no-unused-vars\n\n\n    invariant(this.context.router, \"You should not use <Link> outside a <Router>\");\n    invariant(to !== undefined, 'You must specify the \"to\" property');\n    var history = this.context.router.history;\n    var location = typeof to === \"string\" ? createLocation(to, null, null, history.location) : to;\n    var href = history.createHref(location);\n    return React.createElement(\"a\", _extends({}, props, {\n      onClick: this.handleClick,\n      href: href,\n      ref: innerRef\n    }));\n  };\n\n  return Link;\n}(React.Component);\n\nLink.propTypes = {\n  onClick: PropTypes.func,\n  target: PropTypes.string,\n  replace: PropTypes.bool,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\nLink.defaultProps = {\n  replace: false\n};\nLink.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n      createHref: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default Link;"],"sourceRoot":""}